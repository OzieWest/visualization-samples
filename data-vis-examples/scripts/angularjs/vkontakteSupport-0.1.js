; (function (ng) {

	var vk = ng.module('vk.support', []);
	
	vk.factory('queryHelper', function () {
		return {
			val: '',
			_: function (name, p) {
				if (p)
					this.val += name + p;
				return this;
			},

			start: function () { this.val = ''; return this; },
			end: function () { return this.val; },

			// params
			uids: function (p) { return this._('&uids=', p); },
			sort: function (p) { return this._('&sort=', p); },
			count: function (p) { return this._('&count=', p); },
			offset: function (p) { return this._('&offset=', p); },
			order: function (p) { return this._('&order=', p); },
			fields: function (p) { return this._('&fields=', p); },
			filter: function (p) { return this._('&filter=', p); },
			filters: function (p) { return this._('&filters=', p); },
			nameCase: function (p) { return this._('&name_case=', p); },
			city: function (p) { return this._('&city=', p); },
			country: function (p) { return this._('&country=', p); },
			hometown: function (p) { return this._('&hometown=', p); },
			universityCountry: function (p) { return this._('&university_country=', p); },
			university: function (p) { return this._('&university=', p); },
			universityYear: function (p) { return this._('&university_year=', p); },
			sex: function (p) { return this._('&sex=', p); },
			status: function (p) { return this._('&status=', p); },
			ageFrom: function (p) { return this._('&age_from=', p); },
			ageTo: function (p) { return this._('&age_to=', p); },
			birthDay: function (p) { return this._('&birth_day=', p); },
			birthMonth: function (p) { return this._('&birth_month=', p); },
			online: function (p) { return this._('&online=', p); },
			hasPhoto: function (p) { return this._('&has_photo=', p); },
			schoolCountry: function (p) { return this._('&school_country=', p); },
			schoolCity: function (p) { return this._('&school_city=', p); },
			school: function (p) { return this._('&school=', p); },
			schoolYear: function (p) { return this._('&school_year=', p); },
			religion: function (p) { return this._('&religion=', p); },
			interests: function (p) { return this._('&interests=', p); },
			company: function (p) { return this._('&company=', p); },
			position: function (p) { return this._('&position=', p); },
			groupId: function (p) { return this._('&group_id=', p); },
			groupIds: function (p) { return this._('&group_ids=', p); },
			q: function (p) { return this._('&q=', p); },
			userId: function (p) { return this._('&user_id=', p); },
			extended: function (p) { return this._('&extended=', p); },
			listId: function (p) { return this._('&list_id=', p); },
			onlineMobile: function (p) { return this._('&online_mobile=', p); },
			sourceUid: function (p) { return this._('&source_uid=', p); },
			targetUid: function (p) { return this._('&target_uid=', p); },
			userIds: function (p) { return this._('&user_ids=', p); },
			needSign: function (p) { return this._('&need_sign=', p); },
			ownerId: function (p) { return this._('&owner_id=', p); },
			domain: function (p) { return this._('&domain=', p); },
			posts: function (p) { return this._('&posts=', p); },
			copyHistoryDepth: function (p) { return this._('&copy_history_depth=', p); },
			postId: function (p) { return this._('&post_id=', p); },
			needLikes: function (p) { return this._('&need_likes=', p); },
			previewLength: function (p) { return this._('&preview_length=', p); },
			title: function (p) { return this._('&title=', p); },
			desription: function (p) { return this._('&desription=', p); },
			commentPrivacy: function (p) { return this._('&comment_privacy=', p); },
			privacy: function (p) { return this._('&privacy=', p); },
			albumId: function (p) { return this._('&album_id=', p); },
			albumIds: function (p) { return this._('&album_ids=', p); },
			needCovers: function (p) { return this._('&need_covers=', p); },
			photoSizes: function (p) { return this._('&photo_sizes=', p); },
			needSystem: function (p) { return this._('&need_system=', p); },
			photoIds: function (p) { return this._('&photo_ids=', p); },
			photoId: function (p) { return this._('&photo_id=', p); },
			rev: function (p) { return this._('&rev=', p); },
			feedType: function (p) { return this._('&feed_type=', p); },
			feed: function (p) { return this._('&feed=', p); },
			photos: function (p) { return this._('&photos=', p); },
			photo: function (p) { return this._('&photo=', p); },
			server: function (p) { return this._('&server=', p); },
			hash: function (p) { return this._('&hash=', p); },
			lat: function (p) { return this._('&lat=', p); },
			long: function (p) { return this._('&long=', p); },
			startTime: function (p) { return this._('&start_time=', p); },
			endTime: function (p) { return this._('&end_time=', p); },
			radius: function (p) { return this._('&radius=', p); },
			videos: function (p) { return this._('&videos=', p); },
			videoId: function (p) { return this._('&video_id=', p); },
			width: function (p) { return this._('&width=', p); },
			hd: function (p) { return this._('&hd=', p); },
			adult: function (p) { return this._('&adult=', p); },
			searchOwn: function (p) { return this._('&search_own=', p); },
			message: function (p) { return this._('&message=', p); },
			commentId: function (p) { return this._('&comment_id=', p); },
			attachments: function (p) { return this._('&attachments=', p); },
			fromGroup: function (p) { return this._('&from_group=', p); },
			replyToComment: function (p) { return this._('&reply_to_comment=', p); },
			taggedName: function (p) { return this._('&tagged_name=', p); },
			tagId: function (p) { return this._('&tag_id=', p); },
			
		};
	});
	
})(angular);

