@using System.Configuration
@{
	ViewBag.Title = "Rickshaw for Vkontakte Groups";
}

@section header{
	<link href="~/Content/rickshaw.min.css" rel="stylesheet" />
	<link href="~/Content/detail.css" rel="stylesheet" />
	<link href="~/Content/graph.css" rel="stylesheet" />
	<link href="~/Content/legend.css" rel="stylesheet" />
	<style>
		select {
			width: 100%;
			height: 28px;
			font-size: 16px;
		}

		.infoBlock span {
			font-size: 14px !important;
		}

		#legend {
			margin-top: 10px;
		}

			#legend span {
				font-size: 14px;
			}

		.col1 {
			width: 150px;
		}
	</style>
}

<div ng-app="vis.module" ng-controller="groupController" ng-cloack class="ng-cloack">
	
	<div ng-show="g.search.length == 0">
		<span class="text-danger" style="font-size: 16px;">?name=group_name</span>
	</div>

	<div ng-show="g.current.gid != 0">
		<div class="row">
			<div class="col-sm-2">
				<a href="{{g.current.photo_big}}" class="thumbnail" target="_blank">
					<img ng-src="{{g.current.photo_medium}}">
				</a>
				<div class="checkbox">
					<label>
						<input type="checkbox"
						       ng-model="graph.showLikes"
						       ng-change="allInOneGraph()">
						<span class="label" style="background: orange">Likes</span>
					</label>
				</div>

				<div class="checkbox">
					<label>
						<input type="checkbox"
						       ng-model="graph.showComments"
						       ng-change="allInOneGraph()">
						<span class="label" style="background: #4ab0ce">Comments</span>
					</label>
				</div>

				<div class="checkbox">
					<label>
						<input type="checkbox"
						       ng-model="graph.showReposts"
						       ng-change="allInOneGraph()">
						<span class="label" style="background: #91DF97">Reposts</span>
					</label>
				</div>

				<select ng-options="renderer for renderer in graph.renderers" ng-model="graph.renderer"></select>
			</div>

			<div class="col-sm-10">
				<table class="table table-striped table-bordered">
					<tr>
						<td class="col1">Id</td>
						<td class="col2">{{ g.current.gid }}</td>
					</tr>
					<tr>
						<td class="col1">Name</td>
						<td class="col2">{{ g.current.name }}</td>
					</tr>
					<tr>
						<td class="col1">Screen name</td>
						<td class="col2">{{ g.current.screen_name }}</td>
					</tr>
					<tr>
						<td class="col1">Is closed</td>
						<td class="col2">{{ g.current.is_closed == 1 ? 'true': false }}</td>
					</tr>
					<tr>
						<td class="col1">Type</td>
						<td class="col2">{{ g.current.type }}</td>
					</tr>
					<tr>
						<td class="col1">Description</td>
						<td class="col2" ng-bind-html="g.current.description"></td>
					</tr>
				</table>
			</div>
		</div>
		<h3 style="color: rgb(172, 172, 172);">Last 100 posts</h3>
		<div ng-show="posts.length != 0">
			<div my-chart
			     data="graph.data"
			     color="graph.color"
			     renderer="graph.renderer"
			     w="graph.w()"
			     h="graph.h()">
			</div>
		</div>

		<hr />

		<h3 style="color: rgb(179, 173, 173);">Best {{ best.count }} by</h3>
		<tabset>
			<tab heading="Likes">
				<div style="margin-top: 10px;">
					<table class="table table-striped table-colored table-bordered">
						<tr>
							<td>ID</td>
							<td>Count</td>
							<td>URL</td>
						</tr>
						<tr ng-repeat="p in best.likes track by $index">
							<td>{{ p.id }}</td>
							<td>{{ p.likes.count }}</td>
							<td ng-bind-html="getUrl(p.url)"></td>
						</tr>
					</table>
				</div>
			</tab>
			<tab heading="Comments">
				<div style="margin-top: 10px;">
					<table class="table table-striped table-colored table-bordered">
						<tr>
							<td>ID</td>
							<td>Count</td>
							<td>URL</td>
						</tr>
						<tr ng-repeat="p in best.comments track by $index">
							<td>{{ p.id }}</td>
							<td>{{ p.comments.count }}</td>
							<td ng-bind-html="getUrl(p.url)"></td>
						</tr>
					</table>
				</div>
			</tab>
			<tab heading="Reposts">
				<div style="margin-top: 10px;">
					<table class="table table-striped table-colored table-bordered">
						<tr>
							<td>ID</td>
							<td>Count</td>
							<td>URL</td>
						</tr>
						<tr ng-repeat="p in best.reposts track by $index">
							<td>{{ p.id }}</td>
							<td>{{ p.reposts.count }}</td>
							<td ng-bind-html="getUrl(p.url)"></td>
						</tr>
					</table>
				</div>
			</tab>
		</tabset>
	</div>
</div>

@section scripts
{
	<script src="~/Scripts/Rickshaw.js"></script>

	<script type="text/javascript">
		'use sctrict';

		function getParameterByName(name) {
			name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
			var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
				results = regex.exec(location.search);
			return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
		}

		var token = '@Html.Raw(ConfigurationManager.AppSettings["vkToken"])';
		
		mainModule.controller('groupController', function ($scope, $log, vkService) {
			$scope.g = {
				search: getParameterByName('name'),
				current: { gid: 0 },
				data: {}
			};

			$scope.best = {
				likes: [],
				reposts: [],
				comments: [],
				count: 10
			};

			$scope.graph = {
				ignore: 0,
				showLikes: true,
				showComments: true,
				showReposts: true,
				renderers: ['line', 'bar', 'scatterplot', 'area'],
				renderer: 'line',
				data: [{ data: [{ x: 0, y: 0 }], color: 'blue' }],
				w: function () {
					return $('#ctrlzone').parent().width();
				},
				h: function () { return 500; }
			};
			
			function loadData(name) {
				return vkService.groupWallGet(name).then(function (r) {
					var d = _.filter(r, function (e) { if (!_.isEmpty(e)) return e; });
					$scope.g.data = angular.copy(d);
				});
			}

			$scope.allInOneGraph = function () {

				$scope.graph.data = [];

				var ignore = $scope.graph.ignore,
					lastCount = $scope.best.count;

				if ($scope.graph.showLikes) mapData('likes', "orange");
				if ($scope.graph.showComments) mapData('comments', "#4ab0ce");
				if ($scope.graph.showReposts) mapData('reposts', "#91DF97");

				function mapData(type, color) {
					var name = $scope.g.search;
					var d = _.compact(_.map($scope.g.data, function (e, i) {
						if (typeof ignore != 'undefined' && ignore != null && ignore != 0) {
							if (e[type].count < ignore)
								return null;
						}
						var r = {
							x: i,
							y: e[type].count,
							url: 'http://vk.com/' + name + '?w=wall-' + $scope.g.current.gid + '_' + e.id,
							text: e.text,
							date: e.date,
							id: e.id
						};
						r[type] = e[type];
						return r;
					}));

					$scope.best[type] = getLast(d, type, lastCount); // BEST
					$scope.graph.data.push({ color: color, data: d, name: type }); // GRAPH
				}
			};

			$scope.getUrl = function (url) {
				return "<a href='" + url + "' target='_blank'>" + url + "</a>";
			};

			function getLast(data, type, count) {
				var m = _.sortBy(data, function (e) { return -e[type].count; });
				var r = [];
				for (var i = 0; i < count; i++) {
					r.push(m[i]);
				}
				return r;
			}

			(function () {
				var s = $scope.g.search;
				if (s.length != 0) {
					vkService.groupGet(s).then(function (r) {
						if (typeof r != 'undefined' && r.length != 0) {
							$scope.g.current = angular.copy(r[0]);
						}
						loadData($scope.g.search).then(function () { $scope.allInOneGraph(); });
					});
				}
			})();
		});
	</script>
}