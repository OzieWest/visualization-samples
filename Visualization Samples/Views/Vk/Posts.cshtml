@using System.Configuration
@{
	ViewBag.Title = "Rickshaw for Vkontakte Posts";
}

@section header{
	<link href="~/Content/rickshaw.min.css" rel="stylesheet" />
	<link href="~/Content/detail.css" rel="stylesheet" />
	<link href="~/Content/graph.css" rel="stylesheet" />
	<link href="~/Content/legend.css" rel="stylesheet" />
	<style>
		select {
			width: 100%;
			height: 28px;
			font-size: 16px;
		}
		.infoBlock span {
			font-size: 14px !important;
		}
		#legend {
			margin-top: 10px;
		}
		#legend span {
			font-size: 14px;
		}
	</style>
}

<div ng-app="vis.module" ng-controller="treeController" ng-cloack class="ng-cloack">

	<div class="text-danger" style="font-size: 16px;" ng-if="vkid.length == 0">
		?id=your_id
	</div>

	<div ng-if="vkid.length != 0">
		<progressbar ng-show="conf.isBusy" class="progress-striped active" value="100" type="info">loading...</progressbar>

		<div class="row">
			<div class="col-sm-3">
				<div style="margin-bottom: 10px;">
					<select style="margin-bottom: 5px;"
						ng-model="v.selected"
					        ng-options="f.last_name + ' ' + f.first_name for f in v.friends | orderBy:['last_name']"
					        ng-change="loadPosts()">
					</select>
					
					<div ng-show="posts.length != 0" class="checkbox">
						<label>
							<input type="checkbox"
								ng-model="graph.showLikes"
								ng-change="allInOneGraph()">
							<span class="label" style="background: orange">Likes</span>
						</label>
					</div>

					<div ng-show="posts.length != 0" class="checkbox">
						<label>
							<input type="checkbox"
								ng-model="graph.showComments"
								ng-change="allInOneGraph()">
							<span class="label" style="background: #4ab0ce">Comments</span>
						</label>
					</div>

					<div ng-show="posts.length != 0" class="checkbox">
						<label>
							<input type="checkbox"
								ng-model="graph.showReposts"
								ng-change="allInOneGraph()">
							<span class="label" style="background: #91DF97">Reposts</span>
						</label>
					</div>

					<select ng-show="posts.length != 0" ng-options="renderer for renderer in graph.renderers" ng-model="graph.renderer"></select>
				</div>
			</div>
			<div class="col-sm-9">
				<table class="table table-striped table-bordered table-colored">
					<tr>
						<td>Posts (original/copy)</td>
						<td>{{ countPost('post').length }}/{{ countPost('copy').length }}</td>
					</tr>
				</table>
			</div>
		</div>

		<div ng-show="posts.length != 0">
			<div my-chart
				data="graph.data"
				color="graph.color"
				renderer="graph.renderer"
				w="graph.w()"
				h="graph.h()"
				post="postname.val">
			</div>
		</div>
	</div>
</div>

@section scripts
{
	<script src="~/jsApp/svg.vk.posts.js"></script>
	<script src="~/Scripts/Rickshaw.js"></script>

	<script type="text/javascript">
		'use sctrict';

		var token = '@Html.Raw(ConfigurationManager.AppSettings["vkToken"])';
		mainModule.value('vk_id', '@Html.Raw(ViewBag.ID)');

		mainModule.controller('treeController', function($scope, $timeout, $log, vkService, vk_id) {
			$scope.vkid = vk_id;
			$scope.conf = { isBusy: true };

			$scope.profile = {};
			$scope.postname = { val: 'test'};

			$scope.posts = [];

			function wallGet() {
				vkService.wallGet($scope.v.selected.uid, 0, 100, 1, 1).then(function(r) {
					var d = _.filter(r, function(e) { if (!_.isEmpty(e)) return e; });
					$scope.posts = angular.copy(d);

					$scope.allInOneGraph();
					$scope.conf.isBusy = false;
				});
			}

			function getProfile(id) {
				return vkService.usersGet(id).then(function(u) {
					$scope.profile = angular.copy(u[0]);
				});
			}

			/* Загружает список постов по ID пользователя */
			$scope.loadPosts = function() {
				if (!_.isEmpty($scope.profile)) {
					$scope.conf.isBusy = true;
					wallGet();
				}
			};

			/* Удаление постов */
			$scope.clearPosts = function() { $scope.posts = []; };

			/* Удаление точек */
			$scope.clearDots = function() { $scope.profile.dots = []; };

			/* Возвращает количество постов по типу параметра */
			$scope.countPost = function(_type) { return _.filter($scope.posts, function(e) { if (e.post_type == _type) return e; }); };

			/* FRIENDS */
			$scope.v = {
				friends: [],
				selected: {}
			};

			$scope.getFriends = function(id) {
				if (!_.isEmpty(id)) {
					$scope.conf.isBusy = true;

					getProfile(id).then(function(u) {
						vkService.friendsGet(id, 'last_name').then(function(r) {
							$scope.v.friends = angular.copy(r);

							$scope.profile.online = 0;
							$scope.profile.user_id = $scope.profile.uid;
							$scope.v.friends.push($scope.profile);

							$scope.conf.isBusy = false;
						});
					});
				}
			};

			/* INIT */
			$scope.getFriends(vk_id);

			$scope.graph = {
				showLikes: true,
				showComments: true,
				showReposts: true,
				renderers: ['line', 'bar', 'scatterplot', 'area'],
				renderer: 'line',
				color: '#4ab0ce',
				data: [{ data: [{ x: 0, y: 0 }], color: 'blue' }],
				w: function() {
					return $('#ctrlzone').parent().width();
				},
				h: function() { return 500; }
			};

			$scope.createGraph = function(prop) {
				$scope.graph.data = [];

				$scope.graph.data.push({
					color: "#6EA6DA",
					data: getPosts(prop),
					name: prop
				});
			};

			function getPosts(type, ignore) {
				return _.compact(_.map($scope.posts, function(e, i) {

					if (typeof ignore != 'undefined' && ignore != null && ignore != 0) {
						if (e[type].count < ignore)
							return null;
					}

					return {
						x: i,
						y: e[type].count,
						url: 'http://vk.com/id' + $scope.v.selected.uid + '?w=wall' + $scope.v.selected.uid + '_' + e.id,
						ptype: e.post_type
					};
				}));
			}

			$scope.allInOneGraph = function() {
				$scope.graph.data = [];

				if ($scope.graph.showLikes) {
					$scope.graph.data.push({
						color: "orange",
						data: getPosts('likes', 0),
						name: 'likes'
					});
				}

				if ($scope.graph.showComments) {
					$scope.graph.data.push({
						color: "#4ab0ce",
						data: getPosts('comments', 0),
						name: 'comments'
					});
				}

				if ($scope.graph.showReposts) {
					$scope.graph.data.push({
						color: "#91DF97",
						data: getPosts('reposts', 0),
						name: 'reposts'
					});
				}
			};
		});
	</script>
}